// 定义断点
$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1540px
);

// 定义尺寸
$sizes: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9);

// 定义方向
$directions: (
  '': '',
  't': 'top',
  'r': 'right',
  'b': 'bottom',
  'l': 'left',
  'x': ('left', 'right'),
  'y': ('top', 'bottom')
);

// Mixins
@mixin responsive($breakpoint) {
  @if $breakpoint == '' {
    @content;
  } @else {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin generate-utility($prefix, $property, $values) {
  @each $value in $values {
    .#{$prefix}-#{$value} {
      #{$property}: #{$value} !important;
    }
  }
}

// 基础样式
.img-fluid {
  max-width: 100% !important;
  height: auto !important;
}

.img-cover {
  width: 100% !important;
  object-fit: cover !important;
}

// 边框样式
@each $direction, $value in $directions {
  @if $direction == '' {
    .border {
      border: var(--acrool-border-width) var(--acrool-border-style) var(--acrool-border-color) !important;
    }
  } @else {
    .border-#{$direction} {
      @if type-of($value) == 'list' {
        @each $pos in $value {
          border-#{$pos}: var(--acrool-border-width) var(--acrool-border-style) var(--acrool-border-color) !important;
        }
      } @else {
        border-#{$value}: var(--acrool-border-width) var(--acrool-border-style) var(--acrool-border-color) !important;
      }
    }
  }
}

// 旋转样式
@for $i from 1 through 3 {
  .rotate-#{$i * 90} {
    transform: rotate(#{$i * 90}deg) !important;
  }
}

// 文本溢出样式
.text-overflow {
  white-space: nowrap !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
}

.text-area-overflow {
  display: -webkit-box !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  -webkit-line-clamp: var(--overflow-line, 1);
  -webkit-box-orient: vertical !important;
}

@for $i from 2 through 5 {
  .text-area-overflow-#{$i} {
    --overflow-line: #{$i};
  }
}

.text-pre { white-space: pre !important; }
.text-pre-line { white-space: pre-line !important; }

// 定位样式
.absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.absolute-center-x {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.absolute-center-y {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.inset-0 { inset: 0; }

// 滤镜样式
.filter-gray { filter: grayscale(1) !important; }
.filter-while { filter: brightness(0) invert(1) !important; }
.filter-mask-b { mask-image: linear-gradient(to bottom, white, white, transparent) !important; }
.filter-mask-b-80 { mask-image: linear-gradient(to bottom, white 0%, white 80%, transparent 100%) !important; }

// 字体大小
@for $i from 1 through 6 {
  .fs-#{$i} {
    font-size: #{2.5 - ($i - 1) * 0.5}rem !important;
  }
}

// 可见性
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// 响应式样式生成
@each $breakpoint, $width in $breakpoints {
  @include responsive($breakpoint) {
    // 尺寸类
    @each $size in $sizes {
      .h-#{$breakpoint}-#{$size} { height: #{$size} !important; }
      .w-#{$breakpoint}-#{$size} { width: #{$size} !important; }
    }
    
    // 显示类
    @each $display in (none, inline, inline-block, block, flex, inline-flex, grid, inline-grid) {
      .d-#{$breakpoint}-#{$display} { display: #{$display} !important; }
    }
    
    // Flex 布局类
    @each $direction in (row, column, row-reverse, column-reverse) {
      .flex-#{$breakpoint}-#{$direction} { flex-direction: #{$direction} !important; }
    }
    
    // 对齐类
    @each $align in (start, end, center, between, around) {
      .justify-content-#{$breakpoint}-#{$align} { justify-content: #{$align} !important; }
      .align-items-#{$breakpoint}-#{$align} { align-items: #{$align} !important; }
    }
  }
}

// 打印样式
@media print {
  @each $display in (none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex) {
    .d-print-#{$display} { display: #{$display} !important; }
  }
}


